app:
  jwt:
    secret: testsecret
  gateway:
    secret: testsecret

spring:
  main:
    web-application-type: reactive

  security:
    user:
      name: testuser
      password: testpassword

  cloud:
    gateway:
      server:
        webflux:
          routes:
            - id: user_route
              uri: http://localhost:8081
              predicates:
                - Path=/api/auth/**,/api/users/**
              filters:
                - AddRequestHeader=X-Internal-Secret,${app.gateway.secret}
                - name: CircuitBreaker
                  args:
                    name: defaultCircuitBreaker
                    fallbackUri: forward:/fallback/users

            - id: product_route
              uri: http://localhost:8082
              predicates:
                - Path=/api/products/**
              filters:
                - AddRequestHeader=X-Internal-Secret,${app.gateway.secret}
                - name: CircuitBreaker
                  args:
                    name: defaultCircuitBreaker
                    fallbackUri: forward:/fallback/products

            - id: cart_route
              uri: http://localhost:8083
              predicates:
                - Path=/api/cart/**
              filters:
                - AddRequestHeader=X-Internal-Secret,${app.gateway.secret}

            - id: order_route
              uri: http://localhost:8084
              predicates:
                - Path=/api/orders/**
              filters:
                - AddRequestHeader=X-Internal-Secret,${app.gateway.secret}

resilience4j:
  circuitbreaker:
    instances:
      defaultCircuitBreaker:
        slidingWindowSize: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
        permittedNumberOfCallsInHalfOpenState: 3
  retry:
    instances:
      defaultCircuitBreaker:
        maxRetryAttempts: 3
        waitDuration: 500ms