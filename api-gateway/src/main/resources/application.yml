server:
  port: 8080

spring:
  application:
    name: "api-gateway"
  config:
    import: "configserver:${CONFIG_SERVER_URI:http://localhost:8888}/"

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: "${KEYCLOAK_BASE_URL:http://localhost:7080}/realms/ecommerce-realm"

  cloud:
    circuitbreaker:
      resilience4j:
        configs:
          default:
            ignore-exceptions:
              - org.springframework.web.client.HttpServerErrorException$ServiceUnavailable
            slidingWindowSize: 10
            failureRateThreshold: 50
            waitDurationInOpenState: 10000
        instances:
          defaultServiceCircuitBreaker:
            base-config: default

    gateway:
      server:
        webflux:
          discovery:
            locator:
              enabled: false
              lower-case-service-id: true
          httpclient:
            connect-timeout: 3000
            response-timeout: 7s

management:
  endpoints:
    web:
      exposure:
        include: "*"
  management:
    endpoints:
      web:
        exposure:
          include: "*"
    health:
      livenessState:
        enabled: true
      readinessState:
        enabled: true
    endpoint:
      shutdown:
        enabled: true
      health:
        probes:
          enabled: true
  endpoint:
    gateway:
      access: unrestricted
  info:
    env:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

info:
  app:
    name: "gatewayserver"
    description: "Gateway Server for Ecommerce Application"
    version: "1.0"

logging:
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"